//const fs = require('fs');

// fs.readFile('C:/Users/Cristi/Desktop/CalutulBot/Dialogue/help.txt', 'utf8', function (err, data) {
//     if (err){
//         return console.log(err);
//     }
//     helpText = data;
// });



// fs.readFile('C:/Users/Cristi/Desktop/CalutulBot/Dialogue/replies.txt', 'utf8', function (err,data) {
//     if (err) {
//       return console.log(err);
//     }
//     replies = data.split("\n");
// });

// fs.readFile('C:/Users/Cristi/Desktop/CalutulBot/Dialogue/rareReplies.txt', 'utf8', function (err,data) {
//     if (err) {
//       return console.log(err);
//     }
//     ultraRareReplies = data.split("\n");
// });



// fs.readFile('C:/Users/Cristi/Desktop/CalutulBot/Music/predefinedCommandsAndPaths.csv', 'utf8', function (err,data) {
//     if (err) {
//       return console.log(err);
//     }
//     args = data.split('\n');
//     let whatev = args.pop();
//     whatev = args.shift();
//     let counter = 0;
//     args.forEach(element => {
//         temp = element.split(',');
//         predefinedCommandsList[counter] = temp[0];
//         predefinedPathList[counter] = temp[1].replace('\r', '');
//         counter++;
//     });
// });



// fs.readFile('C:/Users/Cristi/Desktop/CalutulBot/Music/outputMisc.txt', 'utf8', function (err,data) {
//     if (err) {
//       return console.log(err);
//     }
//     temp = data;
//     miscMusicTitles = temp.split("\n");
//     for(let i = 0; i < miscMusicTitles.length; i++){
//         miscMusicTitles[i] = miscMusicTitles[i].replace('\r', '');
//         miscMusicTitles[i] = miscMusicTitles[i].replace('.mp3', '');
//         miscMusicTitles[i] = miscMusicTitles[i].replace(' ', '');
//     }
//     miscMusicTitles.splice(miscMusicTitles.indexOf(''), 1);
//     numberOfMisc = miscMusicTitles.length;
//     let ccounter = 1;
//     for(let i = 0; i < miscMusicTitles.length; i++) {
//         autoReply += ccounter++ +  ". **!" + miscMusicTitles[i] + "**\n";
//     }
// });


            // if(msg.content.toLowerCase().startsWith("!bankset")){
            //     args = msg.content.split(" ");
            //     try{
            //         console.log("Setting the bank amount to " + args[1]);
            //         const res = await service.updateAccount(msg.author.id, parseInt(args[1]));
            //         msg.reply("Success!");
            //     }
            //     catch(e){
            //         if (e instanceof KeyError)
            //             msg.reply(e.message);
            //         else
            //             console.log(e);
            //     }
            // }

            // if(msg.content.toLowerCase().startsWith("!test")){
            //     console.log(repo);
            // }
            
            // if(msg.content.toLowerCase().startsWith("!bankadd")){
            //     args = msg.content.split(" ");
            //     try{
            //         console.log("Adding " + args[1] + " to the bank account of " + msg.author.id);
            //         service.addToAccount(msg.author.id, parseInt(args[1]));
            //         msg.reply("Success!");
            //     }
            //     catch(e){
            //         if (e instanceof KeyError)
            //             msg.reply(e.message);
            //         else
            //             console.log(e);
            //     }
            // }

            // if(msg.content.toLowerCase().startsWith("!bankdelete")){
            //     try{
            //         console.log("Trying to delete bank account for " + msg.author.id);
            //         const res = service.deleteAccount(msg.author.id);
            //         if(res)
            //             msg.reply("Account deleted!");
            //         else
            //             msg.reply("Something went wrong!");
            //     }
            //     catch(e){
            //         if (e instanceof KeyError)
            //             msg.reply(e.message);
            //         else
            //             console.log(e.message);
            //     }
            // }